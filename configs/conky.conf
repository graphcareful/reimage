--[[
#=====================================================================================
#                               aureola
# Date    : 27/01/2018
# Author  : Erik Dubois at http://www.erikdubois.be
# Version : v2.0.3
# License : Distributed under the terms of GNU GPL version 2 or later
# Documentation : http://erikdubois.be/category/linux/aureola/
#======================================================================================

#======================================================================================
#                               
# Source : conky-sys-info V5 by +WillemO 25-june-16
#
#======================================================================================


]]

conky.config = {

	--Various settings

	background = true, 							-- forked to background
	cpu_avg_samples = 2,						-- The number of samples to average for CPU monitoring. 
	diskio_avg_samples = 10,					-- The number of samples to average for disk I/O monitoring. 
	double_buffer = true,						-- Use the Xdbe extension? (eliminates flicker) 
	if_up_strictness = 'address',				-- how strict if testing interface is up - up, link or address
	net_avg_samples = 2,						-- The number of samples to average for net data 
	no_buffers = true,							-- Subtract (file system) buffers from used memory? 
	temperature_unit = 'celsius',				-- fahrenheit or celsius
	text_buffer_size = 2048,					-- size of buffer for display of content of large variables - default 256
	update_interval = 1,						-- update interval
	imlib_cache_size = 0,                       -- disable image cache to get a new spotify cover per song
	

	--Placement

	alignment = 'top_right',					-- top-left,top-middle,top-right,bottom-left,bottom-middle,bottom-right,
												-- middle-left,middle-middle,middle-right,none
	--Arch Duoscreen
	--gap_x = -1910,
	gap_x = 20,									-- pixels between right or left border
	gap_y = 45,									-- pixels between bottom or left border
	minimum_height = 1100,						-- minimum height of window
	minimum_width = 280,						-- minimum height of window
	maximum_width = 280,						-- maximum height of window

	--Graphical

	border_inner_margin = 10, 					-- margin between border and text
	border_outer_margin = 1, 					-- margin between border and edge of window
	border_width = 0, 							-- border width in pixels
	default_bar_width = 280,					-- default is 0 - full width					
	default_bar_height = 10,					-- default is 6
	default_gauge_height = 25,					-- default is 25
	default_gauge_width =40,					-- default is 40
	default_graph_height = 40,					-- default is 25
	default_graph_width = 153,					-- default is 0 - full width
	default_shade_color = '#000000',			-- default shading colour
	default_outline_color = '#000000',			-- default outline colour
	draw_borders = false,						-- draw borders around text
	draw_graph_borders = true,					-- draw borders around graphs
	draw_shades = false,						-- draw shades
	draw_outline = false,						-- draw outline
	stippled_borders = 0,						-- dashing the border

	--Textual
	
	extra_newline = false,						-- extra newline at the end - for asesome's wiboxes
	format_human_readable = true,				-- KiB, MiB rather then number of bytes
	font = 'SourceSansPro-ExtraLight:size=11:oblique',  -- font for complete conky unless in code defined
	max_text_width = 0,							-- 0 will make sure line does not get broken if width too smal
	max_user_text = 16384,						-- max text in conky default 16384
	override_utf8_locale = true,				-- force UTF8 requires xft
	short_units = true,							-- shorten units from KiB to k
	top_name_width = 21,						-- width for $top name value default 15
	top_name_verbose = false,					-- If true, top name shows the full command line of  each  process - Default value is false.
	uppercase = false,							-- uppercase or not
	use_spacer = 'none',						-- adds spaces around certain objects to align - default none
	use_xft = true,								-- xft font - anti-aliased font
	xftalpha = 1,								-- alpha of the xft font - between 0-1

	--Windows

	own_window = true,							-- create your own window to draw
	own_window_argb_value = 150,				-- real transparency - composite manager required 0-255
	own_window_argb_visual = true,				-- use ARGB - composite manager required
	own_window_class = 'Conky',					-- manually set the WM_CLASS name for use with xprop
	own_window_colour = '#000000',				-- set colour if own_window_transparent no
	own_window_hints = 'undecorated,below,above,sticky,skip_taskbar,skip_pager',  -- if own_window true - just hints - own_window_type sets it
	own_window_transparent = no,				-- if own_window_argb_visual is true sets background opacity 0%
	own_window_title = 'system_conky',			-- set the name manually  - default conky "hostname"
	own_window_type = 'normal',					-- if own_window true options are: normal/override/dock/desktop/panel
	

	--Colours

	default_color = '#000000',  				-- default color and border color
	color1 = '#888888', 
	color2 = '#AAAAAA', 
	color3 = '#cccccc', 
	color4 = '#BDBDBD',
	color5 = '#CCCCCC', 
	color6 = '#aa0000',

	--Signal Colours
	color7 = '#1F7411',  						--green
	color8 = '#FFA726',  						--orange
	color9 = '#F1544B',  						--firebrick
	

	--Lua


};


conky.text = [[
${image ~/.config/conky/linuxmint.png -p 220,0 -s 60x60  -f 5}



${color3}${font SourceSansPro-ExtraLight:size=12:weight:bold}Aureola Acros${alignr}${color6}${font}v2.0.3
${hr 2}
${color1}${font SourceSansPro-ExtraLight:size=18:weight:bold}${color2}${execi 6000 lsb_release -d | grep 'Descr'|awk {'print $2 " " $3" " $4" " $5'}}
${color1}${font SourceSansPro-ExtraLight:size=10:weight:bold:italic}${color6}$sysname $kernel 
${color1}${font SourceSansPro-ExtraLight:size=12:weight:bold}Uptime ${alignr}${color6} $uptime
${color1}${font SourceSansPro-ExtraLight:size=12:weight:bold}Cpu Temp ${alignr}${color6}${execi 10 sensors | grep 'Core 0' | awk {'print $3'}}
${color1}${color1}Cpu Freq ${alignr}${color6}${freq_g} Ghz
${color1}${color1}MB Temp ${alignr}${color6}${execi 10 sensors | grep 'SYSTIN' | awk {'print $2'}}
# ${color1}${color1}Disk Temp ${alignr}${color6}${execi 10 nvme smart-log /dev/nvme1n1p1 | grep temperature | awk '{print $3}'}°C
${color1}${color1}Top Case Fan (Front) ${alignr}${color6}${execi 10 sensors | grep 'fan3' | awk {'print $2$3'}}
${color1}${color1}Top Case Fan (Rear) ${alignr}${color6}${execi 10 sensors | grep 'fan4' | awk {'print $2$3'}}
# this works too sudo dmidecode -s system-product-name
# ${color1}Manufacturer ${alignr}${color6}${execi 6000 dmidecode |grep -n2 Base |grep Manu |awk {'print $3'}}
${color1}Total Processes${alignr}${color6}${processes}
${color1}Running processes${color6}${alignr}${running_processes} 
${color1}Load${alignr}${color6}${loadavg}
#arch linux ${color1}Packages Upgrades${alignr}${color6}${execi 3600 checkupdates | wc -l} 
${color1}Packages Upgrades${alignr}${color6}${execi 3600 aptitude search "~U" | wc -l | tail}

# System Load section
${font SourceSansPro-ExtraLight size=8:weight:italic}${color6}System Load
${color6}${hr 2}
${font SourceSansPro-ExtraLight size=12 weight:bold}${color2}CPU Usage over Time
${color1}${cpugraph 40,270 ffffff ff0000 -t}
${color1}${cpubar cpu0 10,150}${color1}  Cpu ${alignr}${if_match ${cpu cpu0} > 80}${color9}${else}${if_match ${cpu cpu0} > 50}${color8}${else}${color6}${endif}${endif}${cpu cpu0}%
${color1}${membar 10,150}  Mem ${alignr}${if_match ${memperc} > 80}${color9}${else}${color6}${endif}${color6}${mem}/${memmax}
${color1}${fs_bar 10,150 /home}  Disk ${alignr}${if_match ${fs_free_perc /home} < 20}${color9}${else}${color6}${endif}${color6}${fs_used /home}/${fs_size /home}

# CPU Section
${font SourceSansPro-ExtraLight size=12:weight:bold}${color1}CPU | ${font SourceSansPro-ExtraLight size=8:weight:italic}${color6}${execi 6000 cat /proc/cpuinfo | grep -i 'Model name' -m 1 | cut -c14-}
${color6}${hr 2}
# Showing TOP 5 CPU-consumers
${offset 10}${font SourceSansPro-ExtraLight:size=12:weight:bold}${color1}${top name 1}${alignr}${color6}${top cpu 1}%${font}
${offset 10}${color1}${top name 2}${alignr}${color6}${top cpu 2}%
${offset 10}${color1}${top name 3}${alignr}${color6}${top cpu 3}%
${offset 10}${color1}${top name 4}${alignr}${color6}${top cpu 4}%
${offset 10}${color1}${top name 5}${alignr}${color6}${top cpu 5}%
${offset 10}${color1}${top name 6}${alignr}${color6}${top cpu 6}%

# GPU Section
${font SourceSansPro-ExtraLight size=12:weight:bold}${color1}GPU | ${font SourceSansPro-ExtraLight size=8:weight:italic}${color6}${exec nvidia-smi --query-gpu=gpu_name --format=csv,noheader,nounits}
${color6}${hr 2}
${font SourceSansPro-ExtraLight:size=12:weight:bold}${color1}GPU Temperature  ${color}  ${alignr}${color6}${execi 60 nvidia-settings -query [gpu:0]/GPUCoreTemp -t} °C
${color1}GPU Utilization    ${color}  ${alignr}${color6}${execi 60 nvidia-smi | grep % | awk '{print $13}'}
${color1}GPU Fan Percentage ${color}  ${alignr}${color6}${execi 60 nvidia-smi | grep % | awk '{print $2}'}
${color1}VRAM Utilization   ${color}  ${alignr}${color6}${execi 60 nvidia-smi | grep % | awk '{print $9}'}
${color1}GPU Power Draw     ${color}  ${alignr}${color6}${execi 60 nvidia-smi | grep % | awk '{print $5}'}
# Kraken Section
${if_existing /etc/leviathan/conky_levd.updates}
${font SourceSansPro-ExtraLight size=12:weight:bold}${color1}AIO Watercooling System | ${font SourceSansPro-ExtraLight size=8:weight:italic}${color6}Kraken x61
${color6}${hr 2}
${font SourceSansPro-ExtraLight size=12:weight:bold}${color1}${color1}Device serial: ${alignr}${color6}${exec grep "Kraken Serial" /etc/leviathan/conky_levd.updates | cut -d ":" -f 2 | cut -b 2-}
${color1}${color1}Radiatior Fan Level: ${alignr}${color6}${execi 3 grep "Fan Speed" /etc/leviathan/conky_levd.updates | cut -d ":" -f 2 | cut -b 2-} RPM
${color1}${color1}Water Pump Speed: ${alignr}${color6}${execi 3 grep "Pump Speed" /etc/leviathan/conky_levd.updates | cut -d ":" -f 2 | cut -b 2-} RPM
${color1}${color1}Water Temp: ${alignr}${color6}${execi 3 grep "Water Temp" /etc/leviathan/conky_levd.updates | cut -d ":" -f 2 | cut -b 2-}°C
${endif}
# Ethernet Section
${if_existing /proc/net/route en}${font SourceSansPro-ExtraLight size=12 weight:bold}${color2}Ethernet
${offset 10}${color1}Up ${color6}${totalup enp2s0}${color1}${alignr}${color6}${totaldown enp2s0} ${color1}Down
${offset 10}${color1}Up ${color6}${upspeed enp2s0}${color1}${alignr}${color6}${downspeed enp2s0} ${color1}Down
#${upspeedgraph enp2s0 40,300 4B1B0C FF5C2B 10000000 -l -t}
#${downspeedgraph enp2s0 40,300 324D23 77B753 10000000 -l -t}
${else}${font SourceSansPro-ExtraLight size=12 weight:bold}${color2}Wireless
${offset 10}${color1}Up ${color1}${totalup wlan0}${color1}${alignr}${color1}${totaldown wlan0} Down
${offset 10}${color1}Up ${color1}${upspeed wlan0}${color1}${alignr}${color1}${downspeed wlan0} Down
#${upspeedgraph wlan0 40,300 4B1B0C FF5C2B 10000000 -l -t}
#${downspeedgraph wlan0 40,300 324D23 77B753 10000000 -l -t}
${endif}\

# Spotify section
${color2}Spotify Playing :
${color6}${if_running spotify}\
${color1}Title : ${color6}${execi 5 dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get string:'org.mpris.MediaPlayer2.Player' string:'Metadata'|egrep -A 1 "title"|egrep -v "title"|cut -b 44-|cut -d '"' -f 1|egrep -v ^$}
${color1}Artist : ${color6}${execi 5 dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get string:'org.mpris.MediaPlayer2.Player' string:'Metadata'|egrep -A 2 "artist"|egrep -v "artist"|egrep -v "array"|awk '{print $2}'}
${color1}Album : ${color6}${execi 5 dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get string:'org.mpris.MediaPlayer2.Player' string:'Metadata'|egrep -A 1 "album"|egrep -v "album"|cut -b 44-|cut -d '"' -f 1|egrep -v ^$}\
${execi 6 ~/.config/conky/spotify-cover.sh}
${image ~/.config/conky/last_album_pic.png -p 200,1200 -s 80x80  -f 5}
${else}\
${color6}${alignr}Offline\
${endif}\
]]
